// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/console-operator/pkg/apis/console/v1"
	scheme "github.com/openshift/console-operator/pkg/generated/clientset/versioned/scheme"
	meta_v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// ConsoleOperatorConfigsGetter has a method to return a ConsoleOperatorConfigInterface.
// A group's client should implement this interface.
type ConsoleOperatorConfigsGetter interface {
	ConsoleOperatorConfigs() ConsoleOperatorConfigInterface
}

// ConsoleOperatorConfigInterface has methods to work with ConsoleOperatorConfig resources.
type ConsoleOperatorConfigInterface interface {
	Create(*v1.ConsoleOperatorConfig) (*v1.ConsoleOperatorConfig, error)
	Update(*v1.ConsoleOperatorConfig) (*v1.ConsoleOperatorConfig, error)
	UpdateStatus(*v1.ConsoleOperatorConfig) (*v1.ConsoleOperatorConfig, error)
	Delete(name string, options *meta_v1.DeleteOptions) error
	DeleteCollection(options *meta_v1.DeleteOptions, listOptions meta_v1.ListOptions) error
	Get(name string, options meta_v1.GetOptions) (*v1.ConsoleOperatorConfig, error)
	List(opts meta_v1.ListOptions) (*v1.ConsoleOperatorConfigList, error)
	Watch(opts meta_v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.ConsoleOperatorConfig, err error)
	ConsoleOperatorConfigExpansion
}

// consoleOperatorConfigs implements ConsoleOperatorConfigInterface
type consoleOperatorConfigs struct {
	client rest.Interface
}

// newConsoleOperatorConfigs returns a ConsoleOperatorConfigs
func newConsoleOperatorConfigs(c *ConsoleV1Client) *consoleOperatorConfigs {
	return &consoleOperatorConfigs{
		client: c.RESTClient(),
	}
}

// Get takes name of the consoleOperatorConfig, and returns the corresponding consoleOperatorConfig object, and an error if there is any.
func (c *consoleOperatorConfigs) Get(name string, options meta_v1.GetOptions) (result *v1.ConsoleOperatorConfig, err error) {
	result = &v1.ConsoleOperatorConfig{}
	err = c.client.Get().
		Resource("consoleoperatorconfigs").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of ConsoleOperatorConfigs that match those selectors.
func (c *consoleOperatorConfigs) List(opts meta_v1.ListOptions) (result *v1.ConsoleOperatorConfigList, err error) {
	result = &v1.ConsoleOperatorConfigList{}
	err = c.client.Get().
		Resource("consoleoperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested consoleOperatorConfigs.
func (c *consoleOperatorConfigs) Watch(opts meta_v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Resource("consoleoperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a consoleOperatorConfig and creates it.  Returns the server's representation of the consoleOperatorConfig, and an error, if there is any.
func (c *consoleOperatorConfigs) Create(consoleOperatorConfig *v1.ConsoleOperatorConfig) (result *v1.ConsoleOperatorConfig, err error) {
	result = &v1.ConsoleOperatorConfig{}
	err = c.client.Post().
		Resource("consoleoperatorconfigs").
		Body(consoleOperatorConfig).
		Do().
		Into(result)
	return
}

// Update takes the representation of a consoleOperatorConfig and updates it. Returns the server's representation of the consoleOperatorConfig, and an error, if there is any.
func (c *consoleOperatorConfigs) Update(consoleOperatorConfig *v1.ConsoleOperatorConfig) (result *v1.ConsoleOperatorConfig, err error) {
	result = &v1.ConsoleOperatorConfig{}
	err = c.client.Put().
		Resource("consoleoperatorconfigs").
		Name(consoleOperatorConfig.Name).
		Body(consoleOperatorConfig).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *consoleOperatorConfigs) UpdateStatus(consoleOperatorConfig *v1.ConsoleOperatorConfig) (result *v1.ConsoleOperatorConfig, err error) {
	result = &v1.ConsoleOperatorConfig{}
	err = c.client.Put().
		Resource("consoleoperatorconfigs").
		Name(consoleOperatorConfig.Name).
		SubResource("status").
		Body(consoleOperatorConfig).
		Do().
		Into(result)
	return
}

// Delete takes name of the consoleOperatorConfig and deletes it. Returns an error if one occurs.
func (c *consoleOperatorConfigs) Delete(name string, options *meta_v1.DeleteOptions) error {
	return c.client.Delete().
		Resource("consoleoperatorconfigs").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *consoleOperatorConfigs) DeleteCollection(options *meta_v1.DeleteOptions, listOptions meta_v1.ListOptions) error {
	return c.client.Delete().
		Resource("consoleoperatorconfigs").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched consoleOperatorConfig.
func (c *consoleOperatorConfigs) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1.ConsoleOperatorConfig, err error) {
	result = &v1.ConsoleOperatorConfig{}
	err = c.client.Patch(pt).
		Resource("consoleoperatorconfigs").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
